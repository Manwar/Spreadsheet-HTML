#!/usr/bin/env perl 

use strict;
use warnings;
use Spreadsheet::HTML;

use Safe;
use Pod::Usage;
use Getopt::Long;

eval "use HTML::Display";
our $NO_DISPLAY = $@;

my $generator = Spreadsheet::HTML->new;
my $method    = shift if $generator->can( $ARGV[0] || '' );
$method ||= 'generate';

GetOptions (
    'param=s'   => \my %params,
    'display'   => \my $display,
    'help'      => \my $help,
    'man'       => \my $man,
);
pod2usage( -verbose => 0 ) if $help;
pod2usage( -verbose => 2 ) if $man;

my %args;
my $safe = Safe->new;
for (keys %params) {
    my $tmp;
    $args{$_} = $safe->reval( $params{$_} );
}
$args{file}    = $params{file};
$args{indent}  = $params{indent};
$args{encodes} = undef if exists $params{encodes} and $params{encodes} eq 'undef';

if ($display and not $NO_DISPLAY) {
    HTML::Display::display( $generator->$method( %args ) );
} else {
    print $generator->$method( %args ), $/;
}


__END__
=head1 NAME

mktable - generate an HTML table.

=head1 SYNOPSIS

mktable method [options]

 Options:
   --param          parameters, multiple allowed
   --display        display results with HTML::Display
   --help           list usage
   --man            print man page

Example:

  $ mktable generate --param file=t/data/simple.html --param indent='    '

  # generate is the default generator
  $ mktable --param file=t/data/simple.html --param indent='    '

  # don't forget to install and configure Text::FIGlet!
  $ mktable banner --param text="'hello world'" --param animate=1

=head1 OPTIONS

=over 8

=item B<--param>

The params. Run

  perldoc Spreadsheet::HTML

for more information.

=item B<--display>

Display results to your browser via L<HTML::Display>.

  $ mktable sudoku --display

  $ mktable conway --display --param data=[1..300] --param wrap=20

=item B<--help>

Print a brief help message and exits.

=item B<--man>

Prints the manual page and exits.

=back

=head1 DESCRIPTION

B<This program> 

=cut

